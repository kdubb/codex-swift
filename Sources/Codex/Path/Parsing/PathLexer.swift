// Generated from Sources/Codex/Path/Parsing/Path.g4 by ANTLR 4.13.2
@preconcurrency import Antlr4

// swift-format-ignore-file: AllPublicDeclarationsHaveDocumentation, BeginDocumentationCommentWithOneLineSummary, NoLeadingUnderscores, NeverForceUnwrap, NeverUseForceTry

open class PathLexer: Lexer {

  // ꜜꜜꜜꜜꜜ DO NOT CHANGE/REMOVE ꜜꜜꜜꜜꜜ
  internal static func createDecisionToDFA(_ atn: ATN) -> [DFA] {
    var decisionToDFA: [DFA] = []
    let length = atn.getNumberOfDecisions()
    for i in 0..<length {
      decisionToDFA.append(DFA(atn.getDecisionState(i)!, i))
    }
    return decisionToDFA
  }


  // ꜜꜜꜜꜜꜜ DO NOT CHANGE/REMOVE ꜜꜜꜜꜜꜜ

  public
    static let ROOT = 1, CURRENT = 2, MEMBER_ACC = 3, DESC_ACC = 4, WILDCARD = 5, FILTER = 6,
      COLON = 7, SEMI = 8, OPEN_BRACKET = 9, CLOSE_BRACKET = 10, OPEN_PAREN = 11,
      CLOSE_PAREN = 12, COMMA = 13, EXCLAMATION_MARK = 14, LOGICAL_AND = 15,
      LOGICAL_OR = 16, CMP_EQ = 17, CMP_NE = 18, CMP_GT = 19, CMP_GE = 20, CMP_LT = 21,
      CMP_LE = 22, TRUE = 23, FALSE = 24, NULL = 25, BLANK = 26, INT = 27, DIGIT1 = 28,
      NUMBER = 29, SQOT = 30, DQOT = 31, FUNC_NAME = 32, NAME = 33, SQ_STRING = 34,
      DQ_STRING = 35

  public
    static let channelNames: [String] = [
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ]

  public
    static let modeNames: [String] = [
      "DEFAULT_MODE"
    ]

  public
    static let ruleNames: [String] = [
      "ROOT", "CURRENT", "MEMBER_ACC", "DESC_ACC", "WILDCARD", "FILTER", "COLON",
      "SEMI", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", "CLOSE_PAREN",
      "COMMA", "EXCLAMATION_MARK", "LOGICAL_AND", "LOGICAL_OR", "CMP_EQ", "CMP_NE",
      "CMP_GT", "CMP_GE", "CMP_LT", "CMP_LE", "TRUE", "FALSE", "NULL", "BLANK",
      "INT", "DIGIT1", "NUMBER", "FRAC", "EXP", "HEXCHAR", "HEXDIGIT", "NON_SURROGATE",
      "HIGH_SURROGATE", "LOW_SURROGATE", "DIGIT", "ALPHA", "UNICODE_RANGE",
      "ESC", "ESCAPABLE", "UNESCAPED", "SQOT", "DQOT", "ESCAPABLE_CHAR", "LCALPHA",
      "UCALPHA", "FUNC_NAME", "FUNC_FIRST", "FUNC_CHAR", "NAME", "NAME_FIRST",
      "NAME_CHAR", "SQ_CHARS", "SQ_STRING", "DQ_CHARS", "DQ_STRING",
    ]

  private static let _LITERAL_NAMES: [String?] = [
    nil, "'$'", "'@'", "'.'", "'..'", "'*'", "'?'", "':'", "';'", "'['", "']'",
    "'('", "')'", "','", "'!'", "'&&'", "'||'", "'=='", "'!='", "'>'", "'>='",
    "'<'", "'<='", "'true'", "'false'", "'null'", nil, nil, nil, nil, "'''",
    "'\"'",
  ]
  private static let _SYMBOLIC_NAMES: [String?] = [
    nil, "ROOT", "CURRENT", "MEMBER_ACC", "DESC_ACC", "WILDCARD", "FILTER",
    "COLON", "SEMI", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", "CLOSE_PAREN",
    "COMMA", "EXCLAMATION_MARK", "LOGICAL_AND", "LOGICAL_OR", "CMP_EQ", "CMP_NE",
    "CMP_GT", "CMP_GE", "CMP_LT", "CMP_LE", "TRUE", "FALSE", "NULL", "BLANK",
    "INT", "DIGIT1", "NUMBER", "SQOT", "DQOT", "FUNC_NAME", "NAME", "SQ_STRING",
    "DQ_STRING",
  ]
  public
    static let VOCABULARY = Vocabulary(_LITERAL_NAMES, _SYMBOLIC_NAMES)


  override open
    func getVocabulary() -> Vocabulary
  {
    return PathLexer.VOCABULARY
  }

  // ꜜꜜꜜꜜꜜ DO NOT CHANGE/REMOVE ꜜꜜꜜꜜꜜ
  private let _atn = try! ATNDeserializer().deserialize(_serializedATN)
  // ꜛꜛꜛꜛꜛ DO NOT CHANGE/REMOVE ꜛꜛꜛꜛꜛ

  public
    required init(_ input: CharStream)
  {
    RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION)
    super.init(input)
    // ꜜꜜꜜꜜꜜ DO NOT CHANGE/REMOVE ꜜꜜꜜꜜꜜ
    // ANTLR 4.13.2 Lexers are not thread-safe, even when using a dedicated instance per thread.
    let decisionToDFA = Self.createDecisionToDFA(_atn)
    let cache = PredictionContextCache()
    _interp = LexerATNSimulator(self, _atn, decisionToDFA, cache)
    // ꜛꜛꜛꜛꜛ DO NOT CHANGE/REMOVE ꜛꜛꜛꜛꜛ
  }

  override open
    func getGrammarFileName() -> String
  { return "Path.g4" }

  override open
    func getRuleNames() -> [String]
  { return PathLexer.ruleNames }

  override open
    func getSerializedATN() -> [Int]
  { return PathLexer._serializedATN }

  override open
    func getChannelNames() -> [String]
  { return PathLexer.channelNames }

  override open
    func getModeNames() -> [String]
  { return PathLexer.modeNames }

  override open
    func getATN() -> ATN
  { return _atn }

  static let _serializedATN: [Int] = [
    4, 0, 35, 345, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7,
    6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14,
    7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21,
    7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28,
    7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35,
    7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42,
    7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49,
    7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56,
    7, 56, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1,
    7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1,
    14, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1,
    19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1,
    23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 3, 26, 187, 8, 26,
    1, 26, 1, 26, 5, 26, 191, 8, 26, 10, 26, 12, 26, 194, 9, 26, 3, 26, 196, 8, 26, 1, 27, 1, 27, 1,
    28, 1, 28, 1, 28, 3, 28, 203, 8, 28, 1, 28, 3, 28, 206, 8, 28, 1, 28, 3, 28, 209, 8, 28, 1, 29,
    1, 29, 4, 29, 213, 8, 29, 11, 29, 12, 29, 214, 1, 30, 1, 30, 3, 30, 219, 8, 30, 1, 30, 4, 30, 222,
    8, 30, 11, 30, 12, 30, 223, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 3, 31, 232, 8, 31, 1, 32,
    1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35,
    1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 3, 40,
    262, 8, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 3, 44, 273, 8, 44, 1,
    45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 5, 47, 281, 8, 47, 10, 47, 12, 47, 284, 9, 47, 1, 48, 1,
    48, 1, 49, 1, 49, 1, 49, 3, 49, 291, 8, 49, 1, 50, 1, 50, 5, 50, 295, 8, 50, 10, 50, 12, 50, 298,
    9, 50, 1, 51, 1, 51, 3, 51, 302, 8, 51, 1, 52, 1, 52, 3, 52, 306, 8, 52, 1, 53, 1, 53, 1, 53, 1,
    53, 1, 53, 1, 53, 1, 53, 1, 53, 3, 53, 316, 8, 53, 1, 54, 1, 54, 5, 54, 320, 8, 54, 10, 54, 12,
    54, 323, 9, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 3, 55, 335,
    8, 55, 1, 56, 1, 56, 5, 56, 339, 8, 56, 10, 56, 12, 56, 342, 9, 56, 1, 56, 1, 56, 0, 0, 57, 1, 1,
    3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
    31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27,
    55, 28, 57, 29, 59, 0, 61, 0, 63, 0, 65, 0, 67, 0, 69, 0, 71, 0, 73, 0, 75, 0, 77, 0, 79, 0, 81,
    0, 83, 0, 85, 30, 87, 31, 89, 0, 91, 0, 93, 0, 95, 32, 97, 0, 99, 0, 101, 33, 103, 0, 105, 0, 107,
    0, 109, 34, 111, 0, 113, 35, 1, 0, 15, 3, 0, 9, 10, 13, 13, 32, 32, 1, 0, 49, 57, 2, 0, 69, 69,
    101, 101, 2, 0, 43, 43, 45, 45, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 56, 57, 65, 66, 1, 0, 67,
    70, 1, 0, 48, 57, 2, 0, 65, 90, 97, 122, 2, 0, 128, 55295, 57344, 1114111, 7, 0, 47, 47, 92,
    92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 5, 0, 32, 33, 35, 38, 40, 91, 93, 55295,
    57344, 1114111, 1, 0, 97, 122, 1, 0, 65, 90, 3, 0, 95, 95, 128, 55295, 57344, 1114111, 348,
    0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
    0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23,
    1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0,
    0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45,
    1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
    0, 0, 57, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0,
    109, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 1, 115, 1, 0, 0, 0, 3, 117, 1, 0, 0, 0, 5, 119, 1, 0, 0, 0, 7,
    121, 1, 0, 0, 0, 9, 124, 1, 0, 0, 0, 11, 126, 1, 0, 0, 0, 13, 128, 1, 0, 0, 0, 15, 130, 1, 0, 0, 0,
    17, 132, 1, 0, 0, 0, 19, 134, 1, 0, 0, 0, 21, 136, 1, 0, 0, 0, 23, 138, 1, 0, 0, 0, 25, 140, 1, 0,
    0, 0, 27, 142, 1, 0, 0, 0, 29, 144, 1, 0, 0, 0, 31, 147, 1, 0, 0, 0, 33, 150, 1, 0, 0, 0, 35, 153,
    1, 0, 0, 0, 37, 156, 1, 0, 0, 0, 39, 158, 1, 0, 0, 0, 41, 161, 1, 0, 0, 0, 43, 163, 1, 0, 0, 0, 45,
    166, 1, 0, 0, 0, 47, 171, 1, 0, 0, 0, 49, 177, 1, 0, 0, 0, 51, 182, 1, 0, 0, 0, 53, 195, 1, 0, 0,
    0, 55, 197, 1, 0, 0, 0, 57, 202, 1, 0, 0, 0, 59, 210, 1, 0, 0, 0, 61, 216, 1, 0, 0, 0, 63, 231, 1,
    0, 0, 0, 65, 233, 1, 0, 0, 0, 67, 235, 1, 0, 0, 0, 69, 240, 1, 0, 0, 0, 71, 245, 1, 0, 0, 0, 73, 250,
    1, 0, 0, 0, 75, 252, 1, 0, 0, 0, 77, 254, 1, 0, 0, 0, 79, 256, 1, 0, 0, 0, 81, 261, 1, 0, 0, 0, 83,
    263, 1, 0, 0, 0, 85, 265, 1, 0, 0, 0, 87, 267, 1, 0, 0, 0, 89, 272, 1, 0, 0, 0, 91, 274, 1, 0, 0,
    0, 93, 276, 1, 0, 0, 0, 95, 278, 1, 0, 0, 0, 97, 285, 1, 0, 0, 0, 99, 290, 1, 0, 0, 0, 101, 292,
    1, 0, 0, 0, 103, 301, 1, 0, 0, 0, 105, 305, 1, 0, 0, 0, 107, 315, 1, 0, 0, 0, 109, 317, 1, 0, 0,
    0, 111, 334, 1, 0, 0, 0, 113, 336, 1, 0, 0, 0, 115, 116, 5, 36, 0, 0, 116, 2, 1, 0, 0, 0, 117, 118,
    5, 64, 0, 0, 118, 4, 1, 0, 0, 0, 119, 120, 5, 46, 0, 0, 120, 6, 1, 0, 0, 0, 121, 122, 5, 46, 0, 0,
    122, 123, 5, 46, 0, 0, 123, 8, 1, 0, 0, 0, 124, 125, 5, 42, 0, 0, 125, 10, 1, 0, 0, 0, 126, 127,
    5, 63, 0, 0, 127, 12, 1, 0, 0, 0, 128, 129, 5, 58, 0, 0, 129, 14, 1, 0, 0, 0, 130, 131, 5, 59, 0,
    0, 131, 16, 1, 0, 0, 0, 132, 133, 5, 91, 0, 0, 133, 18, 1, 0, 0, 0, 134, 135, 5, 93, 0, 0, 135,
    20, 1, 0, 0, 0, 136, 137, 5, 40, 0, 0, 137, 22, 1, 0, 0, 0, 138, 139, 5, 41, 0, 0, 139, 24, 1, 0,
    0, 0, 140, 141, 5, 44, 0, 0, 141, 26, 1, 0, 0, 0, 142, 143, 5, 33, 0, 0, 143, 28, 1, 0, 0, 0, 144,
    145, 5, 38, 0, 0, 145, 146, 5, 38, 0, 0, 146, 30, 1, 0, 0, 0, 147, 148, 5, 124, 0, 0, 148, 149,
    5, 124, 0, 0, 149, 32, 1, 0, 0, 0, 150, 151, 5, 61, 0, 0, 151, 152, 5, 61, 0, 0, 152, 34, 1, 0,
    0, 0, 153, 154, 5, 33, 0, 0, 154, 155, 5, 61, 0, 0, 155, 36, 1, 0, 0, 0, 156, 157, 5, 62, 0, 0,
    157, 38, 1, 0, 0, 0, 158, 159, 5, 62, 0, 0, 159, 160, 5, 61, 0, 0, 160, 40, 1, 0, 0, 0, 161, 162,
    5, 60, 0, 0, 162, 42, 1, 0, 0, 0, 163, 164, 5, 60, 0, 0, 164, 165, 5, 61, 0, 0, 165, 44, 1, 0, 0,
    0, 166, 167, 5, 116, 0, 0, 167, 168, 5, 114, 0, 0, 168, 169, 5, 117, 0, 0, 169, 170, 5, 101,
    0, 0, 170, 46, 1, 0, 0, 0, 171, 172, 5, 102, 0, 0, 172, 173, 5, 97, 0, 0, 173, 174, 5, 108, 0,
    0, 174, 175, 5, 115, 0, 0, 175, 176, 5, 101, 0, 0, 176, 48, 1, 0, 0, 0, 177, 178, 5, 110, 0, 0,
    178, 179, 5, 117, 0, 0, 179, 180, 5, 108, 0, 0, 180, 181, 5, 108, 0, 0, 181, 50, 1, 0, 0, 0, 182,
    183, 7, 0, 0, 0, 183, 52, 1, 0, 0, 0, 184, 196, 5, 48, 0, 0, 185, 187, 5, 45, 0, 0, 186, 185, 1,
    0, 0, 0, 186, 187, 1, 0, 0, 0, 187, 188, 1, 0, 0, 0, 188, 192, 3, 55, 27, 0, 189, 191, 3, 73, 36,
    0, 190, 189, 1, 0, 0, 0, 191, 194, 1, 0, 0, 0, 192, 190, 1, 0, 0, 0, 192, 193, 1, 0, 0, 0, 193,
    196, 1, 0, 0, 0, 194, 192, 1, 0, 0, 0, 195, 184, 1, 0, 0, 0, 195, 186, 1, 0, 0, 0, 196, 54, 1, 0,
    0, 0, 197, 198, 7, 1, 0, 0, 198, 56, 1, 0, 0, 0, 199, 203, 3, 53, 26, 0, 200, 201, 5, 45, 0, 0,
    201, 203, 5, 48, 0, 0, 202, 199, 1, 0, 0, 0, 202, 200, 1, 0, 0, 0, 203, 205, 1, 0, 0, 0, 204, 206,
    3, 59, 29, 0, 205, 204, 1, 0, 0, 0, 205, 206, 1, 0, 0, 0, 206, 208, 1, 0, 0, 0, 207, 209, 3, 61,
    30, 0, 208, 207, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209, 58, 1, 0, 0, 0, 210, 212, 5, 46, 0, 0, 211,
    213, 3, 73, 36, 0, 212, 211, 1, 0, 0, 0, 213, 214, 1, 0, 0, 0, 214, 212, 1, 0, 0, 0, 214, 215,
    1, 0, 0, 0, 215, 60, 1, 0, 0, 0, 216, 218, 7, 2, 0, 0, 217, 219, 7, 3, 0, 0, 218, 217, 1, 0, 0, 0,
    218, 219, 1, 0, 0, 0, 219, 221, 1, 0, 0, 0, 220, 222, 3, 73, 36, 0, 221, 220, 1, 0, 0, 0, 222,
    223, 1, 0, 0, 0, 223, 221, 1, 0, 0, 0, 223, 224, 1, 0, 0, 0, 224, 62, 1, 0, 0, 0, 225, 232, 3, 67,
    33, 0, 226, 227, 3, 69, 34, 0, 227, 228, 3, 79, 39, 0, 228, 229, 5, 117, 0, 0, 229, 230, 3, 71,
    35, 0, 230, 232, 1, 0, 0, 0, 231, 225, 1, 0, 0, 0, 231, 226, 1, 0, 0, 0, 232, 64, 1, 0, 0, 0, 233,
    234, 7, 4, 0, 0, 234, 66, 1, 0, 0, 0, 235, 236, 3, 65, 32, 0, 236, 237, 3, 65, 32, 0, 237, 238,
    3, 65, 32, 0, 238, 239, 3, 65, 32, 0, 239, 68, 1, 0, 0, 0, 240, 241, 5, 68, 0, 0, 241, 242, 7,
    5, 0, 0, 242, 243, 3, 65, 32, 0, 243, 244, 3, 65, 32, 0, 244, 70, 1, 0, 0, 0, 245, 246, 5, 68,
    0, 0, 246, 247, 7, 6, 0, 0, 247, 248, 3, 65, 32, 0, 248, 249, 3, 65, 32, 0, 249, 72, 1, 0, 0, 0,
    250, 251, 7, 7, 0, 0, 251, 74, 1, 0, 0, 0, 252, 253, 7, 8, 0, 0, 253, 76, 1, 0, 0, 0, 254, 255,
    7, 9, 0, 0, 255, 78, 1, 0, 0, 0, 256, 257, 5, 92, 0, 0, 257, 80, 1, 0, 0, 0, 258, 262, 7, 10, 0,
    0, 259, 260, 5, 117, 0, 0, 260, 262, 3, 63, 31, 0, 261, 258, 1, 0, 0, 0, 261, 259, 1, 0, 0, 0,
    262, 82, 1, 0, 0, 0, 263, 264, 7, 11, 0, 0, 264, 84, 1, 0, 0, 0, 265, 266, 5, 39, 0, 0, 266, 86,
    1, 0, 0, 0, 267, 268, 5, 34, 0, 0, 268, 88, 1, 0, 0, 0, 269, 273, 7, 10, 0, 0, 270, 271, 5, 117,
    0, 0, 271, 273, 3, 63, 31, 0, 272, 269, 1, 0, 0, 0, 272, 270, 1, 0, 0, 0, 273, 90, 1, 0, 0, 0, 274,
    275, 7, 12, 0, 0, 275, 92, 1, 0, 0, 0, 276, 277, 7, 13, 0, 0, 277, 94, 1, 0, 0, 0, 278, 282, 3,
    97, 48, 0, 279, 281, 3, 99, 49, 0, 280, 279, 1, 0, 0, 0, 281, 284, 1, 0, 0, 0, 282, 280, 1, 0,
    0, 0, 282, 283, 1, 0, 0, 0, 283, 96, 1, 0, 0, 0, 284, 282, 1, 0, 0, 0, 285, 286, 3, 91, 45, 0, 286,
    98, 1, 0, 0, 0, 287, 291, 3, 97, 48, 0, 288, 291, 5, 95, 0, 0, 289, 291, 3, 73, 36, 0, 290, 287,
    1, 0, 0, 0, 290, 288, 1, 0, 0, 0, 290, 289, 1, 0, 0, 0, 291, 100, 1, 0, 0, 0, 292, 296, 3, 103,
    51, 0, 293, 295, 3, 105, 52, 0, 294, 293, 1, 0, 0, 0, 295, 298, 1, 0, 0, 0, 296, 294, 1, 0, 0,
    0, 296, 297, 1, 0, 0, 0, 297, 102, 1, 0, 0, 0, 298, 296, 1, 0, 0, 0, 299, 302, 3, 75, 37, 0, 300,
    302, 7, 14, 0, 0, 301, 299, 1, 0, 0, 0, 301, 300, 1, 0, 0, 0, 302, 104, 1, 0, 0, 0, 303, 306, 3,
    103, 51, 0, 304, 306, 3, 73, 36, 0, 305, 303, 1, 0, 0, 0, 305, 304, 1, 0, 0, 0, 306, 106, 1, 0,
    0, 0, 307, 316, 3, 83, 41, 0, 308, 316, 3, 87, 43, 0, 309, 310, 3, 79, 39, 0, 310, 311, 3, 85,
    42, 0, 311, 316, 1, 0, 0, 0, 312, 313, 3, 79, 39, 0, 313, 314, 3, 81, 40, 0, 314, 316, 1, 0, 0,
    0, 315, 307, 1, 0, 0, 0, 315, 308, 1, 0, 0, 0, 315, 309, 1, 0, 0, 0, 315, 312, 1, 0, 0, 0, 316,
    108, 1, 0, 0, 0, 317, 321, 3, 85, 42, 0, 318, 320, 3, 107, 53, 0, 319, 318, 1, 0, 0, 0, 320, 323,
    1, 0, 0, 0, 321, 319, 1, 0, 0, 0, 321, 322, 1, 0, 0, 0, 322, 324, 1, 0, 0, 0, 323, 321, 1, 0, 0,
    0, 324, 325, 3, 85, 42, 0, 325, 110, 1, 0, 0, 0, 326, 335, 3, 83, 41, 0, 327, 335, 3, 85, 42,
    0, 328, 329, 3, 79, 39, 0, 329, 330, 3, 87, 43, 0, 330, 335, 1, 0, 0, 0, 331, 332, 3, 79, 39,
    0, 332, 333, 3, 81, 40, 0, 333, 335, 1, 0, 0, 0, 334, 326, 1, 0, 0, 0, 334, 327, 1, 0, 0, 0, 334,
    328, 1, 0, 0, 0, 334, 331, 1, 0, 0, 0, 335, 112, 1, 0, 0, 0, 336, 340, 3, 87, 43, 0, 337, 339,
    3, 111, 55, 0, 338, 337, 1, 0, 0, 0, 339, 342, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0, 340, 341, 1, 0,
    0, 0, 341, 343, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 343, 344, 3, 87, 43, 0, 344, 114, 1, 0, 0, 0,
    22, 0, 186, 192, 195, 202, 205, 208, 214, 218, 223, 231, 261, 272, 282, 290, 296, 301, 305,
    315, 321, 334, 340, 0,
  ]
}
